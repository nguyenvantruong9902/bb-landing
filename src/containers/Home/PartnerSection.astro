---
import { Image } from "astro:assets";

import Container from "@components/Container.astro";
import Title from "@components/Title.astro";

import AndiBeautyImg from "@assets/images/home/andiBeauty.png";
import OppaBeautyImg from "@assets/images/home/oppaBeauty.png";
import LasolBeautyImg from "@assets/images/home/lasolBeauty.png";
import StarIcon from "@assets/svgs/star.svg?raw";
import LeftArrowIcon from "@assets/svgs/leftArrow.svg?raw";
import RightArrowIcon from "@assets/svgs/rightArrow.svg?raw";

const serviceNames = [
  "Spa Center",
  "Massage Center",
  "Nail Salon",
  "Hair Salon",
  "Dental Clinic",
  "Beauty Clinic",
];

const partners = [
  {
    name: "An Di Beauty",
    image: AndiBeautyImg,
    address: "32 Đặng Văn Ngữ, P.12, Q.10, HCM",
    rating: "(48 nhận xét )",
  },
  {
    name: "Oppa Beauty Nails - Hoa Cúc",
    image: OppaBeautyImg,
    address: "39 Hoa Cúc, P.7, Phú Nhuận, HCM",
    rating: "(48 nhận xét )",
  },
  {
    name: "Lasol Beauty Clinic",
    image: LasolBeautyImg,
    address: "32 Đặng Văn Ngữ, P.12, Q.10, HCM",
    rating: "(48 nhận xét )",
  },
  {
    name: "JM Beauty Lounge",
    image: AndiBeautyImg,
    address: "1741 Lý Tự Trọng, P.Bến Thành, Q.1, HCM",
    rating: "(48 nhận xét )",
  },
  {
    name: "JM Beauty Lounge",
    image: AndiBeautyImg,
    address: "1741 Lý Tự Trọng, P.Bến Thành, Q.1, HCM",
    rating: "(48 nhận xét)",
  },
  {
    name: "Oppa Beauty Nails - Hoa Cúc",
    image: OppaBeautyImg,
    address: "39 Hoa Cúc, P.7, Phú Nhuận, HCM",
    rating: "(48 nhận xét )",
  },
  {
    name: "Lasol Beauty Clinic",
    image: LasolBeautyImg,
    address: "32 Đặng Văn Ngữ, P.12, Q.10, HCM",
    rating: "(48 nhận xét )",
  },
  {
    name: "JM Beauty Lounge",
    image: AndiBeautyImg,
    address: "1741 Lý Tự Trọng, P.Bến Thành, Q.1, HCM",
    rating: "(48 nhận xét )",
  },
];
---

<div class="max-w-[90rem] mx-auto lg:px-12 xl:px-20 mt-32 md:mt-44 xl:mt-64">
  <div class="text-center px-5 xl:text-left">
    <Title centered className="xl:text-left">Đối tác của BeautyBooking</Title>
    <p class="text-title mt-4 text-opacity-semi">
      Hơn 100 cửa hàng đã tin tưởng BeautyBooking
    </p>
  </div>

  <div class="relative flex items-start my-8">
    <div class="service-names">
      {
        serviceNames.map((name, idx) => (
          <div class="service-name" data-idx={idx}>
            {name}
          </div>
        ))
      }
    </div>

    <div class="hidden lg:flex lg:gap-3 lg:absolute lg:right-0 lg:-top-0.5">
      <div class="prev">
        <Fragment set:html={LeftArrowIcon} />
      </div>

      <div class="next">
        <Fragment set:html={RightArrowIcon} />
      </div>
    </div>
  </div>

  <div class="relative">
    <div class="partner-slide">
      {
        partners.map(({ name, image, address, rating }) => (
          <div class="partner">
            <Image src={image} alt="Partner" class="rounded-t-3xl" />

            <div class="px-5 py-4">
              <h5 class="text-title">{name}</h5>
              <p class="text-sub-header text-opacity-neutral mt-1 mb-3">
                {address}
              </p>
              <div class="flex items-center gap-1 text-sub-header">
                <Fragment set:html={StarIcon} />
                <span>4.5</span>
                <p class="text-opacity-neutral">{rating}</p>
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </div>
</div>

<style>
  .service-names {
    @apply relative flex whitespace-nowrap gap-4 xl:flex-wrap;
    @apply overflow-auto snap-x snap-mandatory scroll-px-4 w-full px-4 lg:px-5 xl:snap-none xl:overflow-visible;

    @media screen and (min-width: 1024px) {
      max-width: calc(100% - 8rem);
    }
  }
  .service-names .service-name {
    @apply cursor-pointer px-4 py-[0.81rem] snap-start rounded-lg text-opacity-semi text-paragraph bg-grey-300;
  }

  .service-names .service-name.active {
    @apply bg-primary-700 text-white;
  }

  .prev,
  .next {
    @apply cursor-pointer p-2.5 rounded-full border-[1.5px] border-solid border-grey-400 shadow-xs;
  }

  .prev:hover,
  .next:hover {
    @apply border-grey-700;
  }

  .partner-slide {
    @apply relative whitespace-nowrap py-4 px-4 transition-all ease-linear duration-300;
    @apply overflow-auto snap-x snap-mandatory scroll-px-4 lg:px-5 lg:scroll-px-5;
  }

  .partner-slide .partner {
    @apply cursor-pointer rounded-3xl shadow-md bg-white inline-block snap-start;
    @apply w-[calc(100%-2rem)] max-w-[23.75rem] h-[26.25rem] ml-4 lg:ml-6;
  }
</style>

<script>
  // Handle select services
  const services = document.querySelector<HTMLDivElement>(".service-names");
  services.addEventListener("click", (evt) => {
    const serviceNameElm = evt.target as Element;
    if (serviceNameElm.classList.contains("active")) {
      serviceNameElm.classList.remove("active");
    } else {
      serviceNameElm.classList.add("active");
    }
  });
  // Handle slideshow
  const prevButton = document.querySelector<HTMLDivElement>(".prev");
  const nextButton = document.querySelector<HTMLDivElement>(".next");
  const partnerSlide = document.querySelector<HTMLDivElement>(".partner-slide");

  const itemW = 404;
  const disabledClass = [
    "opacity-50",
    "!shadow-none",
    "border-none",
    "pointer-events-none",
  ];

  // Initialize states
  prevButton.classList.add(...disabledClass);

  const onChangeButtonState = (prevDisabled = false, nextDisabled = false) => {
    if (prevDisabled) {
      prevButton.classList.add(...disabledClass);
      nextButton.classList.remove(...disabledClass);
    } else if (nextDisabled) {
      nextButton.classList.add(...disabledClass);
      prevButton.classList.remove(...disabledClass);
    } else {
      prevButton.classList.remove(...disabledClass);
      nextButton.classList.remove(...disabledClass);
    }
  };

  prevButton.addEventListener("click", () => {
    const toPrev = partnerSlide.scrollLeft - itemW;

    partnerSlide.scrollTo({
      left: toPrev,
      behavior: "smooth",
    });

    onChangeButtonState(toPrev <= 0);
  });

  nextButton.addEventListener("click", () => {
    const toNext = partnerSlide.scrollLeft + itemW;
    const maxScrollLeft = partnerSlide.scrollWidth - partnerSlide.clientWidth;

    partnerSlide.scrollTo({
      left: toNext,
      behavior: "smooth",
    });

    onChangeButtonState(false, toNext >= maxScrollLeft);
  });
</script>
