---
import { Image } from "astro:assets";
import Particles from "astro-particles";
import type { ISourceOptions } from "tsparticles-engine";

import Container from "@components/Container.astro";
import Title from "@components/Title.astro";

import AvatarNotifyImg from "@assets/images/partnership/avatarNotify.png";
import CloverLogoImg from "@assets/images/partnership/clover.png";
import GNailsLogoImg from "@assets/images/partnership/gNails.png";
import HanaLogoImg from "@assets/images/partnership/hana.png";
import HazuLogoImg from "@assets/images/partnership/hazu.png";
import JessiLogoImg from "@assets/images/partnership/jessi.png";
import KimSaNguLogoImg from "@assets/images/partnership/kimSaNgu.png";
import LaSolLogoImg from "@assets/images/partnership/laSol.png";
import LizLogoImg from "@assets/images/partnership/liz.png";
import LuaSpaLogoImg from "@assets/images/partnership/luaSpa.png";
import LunaLogoImg from "@assets/images/partnership/luna.png";
import MamHomeLogoImg from "@assets/images/partnership/mamHome.png";
import NeoLogoImg from "@assets/images/partnership/neo.png";
import OmotenashiLogoImg from "@assets/images/partnership/omotenashi.png";
import PartnershipBannerImg from "@assets/images/partnership/partnershipBanner.png";
import PrettyMeLogoImg from "@assets/images/partnership/prettyMe.png";
import RakuLogoImg from "@assets/images/partnership/raku.png";
import SamLogoImg from "@assets/images/partnership/sam.png";
import VyAnLogoImg from "@assets/images/partnership/vyAn.png";

const storeLogos = [
  LizLogoImg,
  LunaLogoImg,
  GNailsLogoImg,
  HazuLogoImg,
  KimSaNguLogoImg,
  HanaLogoImg,
  CloverLogoImg,
  MamHomeLogoImg,
  PrettyMeLogoImg,
  SamLogoImg,
  VyAnLogoImg,
  JessiLogoImg,
  NeoLogoImg,
  OmotenashiLogoImg,
  LaSolLogoImg,
  RakuLogoImg,
  LuaSpaLogoImg,
];

const options: ISourceOptions = {
  fullScreen: {
    enable: false,
    zIndex: -1,
  },
  particles: {
    color: {
      value: ["#5552FF", "#3ED3A3", "#FFBB38", "#4BA7FE"],
    },
    size: {
      value: {
        min: 5,
        max: 10,
      },
    },
    move: {
      direction: "bottom",
      enable: true,
      outModes: {
        default: "out",
      },
      size: true,
      speed: {
        min: 1,
        max: 3,
      },
    },
    number: {
      value: 60,
      density: {
        enable: true,
        area: 800,
      },
    },
    opacity: {
      value: 0.4,
      animation: {
        enable: false,
        startValue: "max",
        destroy: "min",
        speed: 0.3,
        sync: true,
      },
    },
    rotate: {
      value: {
        min: 0,
        max: 360,
      },
      direction: "random",
      move: true,
      animation: {
        enable: true,
        speed: 60,
      },
    },
    tilt: {
      direction: "random",
      enable: true,
      move: true,
      value: {
        min: 0,
        max: 360,
      },
      animation: {
        enable: true,
        speed: 60,
      },
    },
    shape: {
      type: ["circle", "square"],
    },
  },
};
---

<div class="main-container">
  <Container className="mt-12 xl:mt-24">
    <div class="wrapper">
      <div class="px-5 md:px-0">
        <Title size="large" className="!font-bold md:text-center">
          Quản lý hiệu quả,<br /> Doanh thu tối đa
        </Title>

        <div class="flex justify-center mt-4">
          <p class="text-center text-title">
            Quản lý và phát triển doanh nghiệp của bạn <br
              class="hidden md:block"
            /> cùng BeautyBooking đưa thương hiệu đến gần hơn với người tiêu
            dùng
          </p>
        </div>
      </div>

      <div class="relative w-full px-5 mt-6 md:w-auto md:px-0 xl:mt-8">
        <button
          class="bb-chat-visible bg-primary-600 px-4 py-3 w-full rounded-xl text-white text-title hover:bg-opacity-80 md:rounded-2xl md:w-fit xl:py-[1.1875rem]"
        >
          Trở thành đối tác ngay!
        </button>

        <div
          class="hidden md:block absolute left-[calc(100%+0.5rem)] top-[calc(100%-0.75rem)]"
        >
          <svg
            width="53"
            height="91"
            viewBox="0 0 53 91"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M25.3526 22.9287C24.9379 22.8379 24.5225 22.7463 24.107 22.6546C21.9985 25.04 20.5939 27.8167 19.8944 30.9534C19.2475 33.8517 19.802 35.6135 21.4569 35.7174C23.8152 35.8657 24.3641 33.9376 24.5963 32.2424C25.0197 29.1619 25.1189 26.0356 25.3526 22.9287ZM29.7166 17.271C29.941 20.5263 30.4778 23.5857 30.2712 26.5946C30.0424 29.9209 29.5575 33.3574 28.4092 36.4586C27.0626 40.096 23.5844 41.5192 20.1636 40.6735C16.4941 39.7664 14.4149 36.8208 14.7024 32.6912C15.0732 27.3566 17.428 22.8186 20.6244 18.6607C21.4041 17.6452 22.2627 16.69 23.037 15.767C21.1364 7.81592 18.5516 6.58039 0.426407 4.91941C0.157756 1.92803 2.2336 1.18031 4.48756 0.712961C12.0422 -0.852146 22.2599 3.38747 26.4832 9.79653C26.9115 10.445 27.3078 11.114 27.7999 11.9058C28.8659 11.6225 29.7733 11.3354 30.6995 11.1438C37.3826 9.76245 43.5283 12.2224 46.6323 18.2992C48.4256 21.8082 49.5633 25.7964 50.2401 29.7002C51.4082 36.4331 50.7151 43.2363 49.2451 49.8677C47.4698 57.8812 45.3066 65.8079 43.3209 73.7743C43.0242 74.9675 42.7841 76.1747 42.4368 77.7376C45.0849 76.6518 47.2077 75.5931 49.4503 74.9596C50.306 74.7174 52.1858 75.2891 52.2902 75.7713C52.5118 76.8067 51.9167 78.0339 51.5758 79.1587C51.4991 79.4101 51.0965 79.5657 50.838 79.7574C46.7127 82.8047 42.5405 85.7894 38.4742 88.9141C34.8836 91.6738 33.6941 91.6347 30.958 88.0834C27.8184 84.0078 26.357 79.2626 25.7518 74.236C25.5564 72.6103 25.6274 70.9188 28.1642 70.5823C31.6269 73.6004 31.1404 78.7511 34.0393 82.89C34.6757 81.2311 35.2082 80.1416 35.5157 78.9919C38.1794 69.0418 41.121 59.1496 43.3118 49.0945C44.4992 43.6462 44.7639 37.9115 44.7206 32.312C44.6938 28.8707 43.7578 25.2461 42.4133 22.0467C40.1623 16.6852 35.7719 15.1752 29.7166 17.271Z"
              fill="#4340FC"></path>
          </svg>
        </div>
      </div>

      <div class="relative mt-16 mb-14 px-5 md:px-0 md:mt-20 md:mb-[4.125rem]">
        <Image src={PartnershipBannerImg} alt="partnership-panner" />

        <div class="notification">
          <Image src={AvatarNotifyImg} alt="avatar-notify" class="w-10 h-10" />

          <div>
            <p class="flex justify-between text-caption m-auto">
              <span class="text-primary-800">BB #101123 - 184012</span>
              <span class="text-opacity-neutral">11:32</span>
            </p>

            <p class="font-semibold">
              Jenny
              <span class="text-opacity-neutral">đã đặt 1 lịch hẹn vào</span>
               9:20-Thứ 3, 17/10/2024.
            </p>
          </div>
        </div>

        <div class="revenue">
          <p class="font-semibold text-title">8,122,450,000 đ</p>
          <p class="mt-0.5 mb-2 text-caption text-opacity-neutral">
            Tổng doanh thu năm
          </p>

          <div class="flex gap-x-4">
            {
              Array.from(Array(12)).map((_, idx) => {
                const height = Math.floor(Math.random() * 20) + 20;

                return (
                  <div class="mt-auto">
                    <p
                      class="w-2.5 rounded-full bg-primary-600"
                      style={`height: ${height}px;`}
                    />
                    <p class="text-tiny text-opacity-neutral font-semibold">
                      {idx + 1}
                    </p>
                  </div>
                );
              })
            }
          </div>
        </div>
      </div>

      <div class="w-full">
        <!-- Row 1 -->
        <div class="store-logos">
          <div class="inner">
            {
              storeLogos.slice(0, 8).map((logo) => (
                <div class="w-60 inline-block">
                  <Image src={logo} alt="Partnership" />
                </div>
              ))
            }
            <!-- Duplicated -->
            {
              storeLogos.slice(0, 8).map((logo) => (
                <div class="w-60 inline-block">
                  <Image src={logo} alt="Partnership" />
                </div>
              ))
            }
          </div>
        </div>

        <!-- Row 2 -->
        <div class="store-logos">
          <div class="inner direction-reverse">
            {
              storeLogos.slice(8, storeLogos.length).map((logo) => (
                <div class="w-60 inline-block">
                  <Image src={logo} alt="Partnership" />
                </div>
              ))
            }
            <!-- Duplicated -->
            {
              storeLogos.slice(8, storeLogos.length).map((logo) => (
                <div class="w-60 inline-block">
                  <Image src={logo} alt="Partnership" />
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </Container>
</div>

<Particles
  id="tsparticles"
  options={options}
  init="particlesInit"
  loaded="particlesLoaded"
/>

<style>
  .main-container {
    @apply relative;
  }

  .main-container::before {
    @apply content-[''] block absolute bottom-0 left-0 w-full h-1/3 bg-white;
  }

  .wrapper {
    @apply relative flex flex-col justify-between items-center;
  }

  .notification {
    @apply absolute bg-white top-16 w-80 px-5 py-3 shadow-lg rounded-xl;
    @apply gap-x-4 cursor-pointer right-2 md:right-0 lg:-right-6 xl:-right-16;
    @apply hidden md:flex;
  }

  .revenue {
    @apply absolute bg-white pb-1.5 rounded-xl bottom-[40%] text-center cursor-pointer;
    @apply p-2.5 left-2 md:left-0 lg:-left-6 xl:-left-14 xl:p-4;
    @apply hidden md:block;

    box-shadow:
      0px 9.7px 33.94px -3.23px rgba(24, 39, 75, 0.12),
      0px 6.46px 14.55px -4.85px rgba(24, 39, 75, 0.12);
  }

  .notification:hover,
  .revenue:hover {
    animation: shake 1s linear;
  }
  svg path {
    @apply fill-transparent stroke-primary-700;

    stroke-width: 0.5px;
    animation: drawing 3s linear forwards;
  }

  svg path {
    stroke-dasharray: 1000;
    stroke-dashoffset: 1000;
  }

  .store-logos {
    @apply w-full whitespace-nowrap overflow-hidden;
  }

  .store-logos .inner {
    @apply w-fit;
    animation: scrolling 20s linear infinite;
  }

  .store-logos .inner.direction-reverse {
    animation-direction: reverse;
  }

  @keyframes scrolling {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-50%);
    }
  }

  @keyframes drawing {
    to {
      @apply fill-primary-700 stroke-none;

      stroke-dashoffset: 0;
    }
  }

  @keyframes shake {
    0% {
      transform: translate(2px, 2px) rotate(0deg);
    }
    20% {
      transform: translate(-3px, 0px) rotate(-2deg);
    }
    40% {
      transform: translate(2px, -2px) rotate(2deg);
    }
    60% {
      transform: translate(-3px, 1px) rotate(0deg);
    }
    80% {
      transform: translate(-2px, -2px) rotate(2deg);
    }
    100% {
      transform: translate(1px, -2px) rotate(-2deg);
    }
  }
</style>

<script>
  import { type Container, type Engine } from "tsparticles-engine";
  import { loadFull } from "tsparticles";

  // the function name is the parameter passed to the init attribute
  // required
  // add the function to window is mandatory, it will be searched there
  window.particlesInit = async function (engine: Engine) {
    await loadFull(engine);
  };

  // the function name is the parameter passed to the loaded attribute
  // optional
  // add the function to window is mandatory, it will be searched there
  window.particlesLoaded = function (_: Container) {
    const tsPaticles = document.querySelector<HTMLDivElement>("#tsparticles");
    const mainContent =
      document.querySelector<HTMLDivElement>(".main-container");
    tsPaticles.style.height = mainContent.offsetHeight + "px";

    document.body.removeChild(document.querySelector("astro-particles"));
  };
</script>
